[{"/Users/eryncraig/Desktop/CareerFoundry/meet/src/index.js":"1","/Users/eryncraig/Desktop/CareerFoundry/meet/src/reportWebVitals.js":"2","/Users/eryncraig/Desktop/CareerFoundry/meet/src/serviceWorkerRegistration.js":"3","/Users/eryncraig/Desktop/CareerFoundry/meet/src/App.js":"4","/Users/eryncraig/Desktop/CareerFoundry/meet/src/api.js":"5","/Users/eryncraig/Desktop/CareerFoundry/meet/src/EventList.js":"6","/Users/eryncraig/Desktop/CareerFoundry/meet/src/NumberOfEvents.js":"7","/Users/eryncraig/Desktop/CareerFoundry/meet/src/CitySearch.js":"8","/Users/eryncraig/Desktop/CareerFoundry/meet/src/mock-data.js":"9","/Users/eryncraig/Desktop/CareerFoundry/meet/src/Event.js":"10","/Users/eryncraig/Desktop/CareerFoundry/meet/src/Alert.js":"11","/Users/eryncraig/Desktop/CareerFoundry/meet/src/WelcomeScreen.jsx":"12","/Users/eryncraig/Desktop/CareerFoundry/meet/src/EventGenre.js":"13"},{"size":936,"mtime":1658766327567,"results":"14","hashOfConfig":"15"},{"size":364,"mtime":1657729399467,"results":"16","hashOfConfig":"15"},{"size":5064,"mtime":1657729399467,"results":"17","hashOfConfig":"15"},{"size":3981,"mtime":1660059686962,"results":"18","hashOfConfig":"15"},{"size":2864,"mtime":1658775085983,"results":"19","hashOfConfig":"15"},{"size":380,"mtime":1658772729550,"results":"20","hashOfConfig":"15"},{"size":995,"mtime":1658769176214,"results":"21","hashOfConfig":"15"},{"size":1807,"mtime":1658769929306,"results":"22","hashOfConfig":"15"},{"size":3120,"mtime":1658250012569,"results":"23","hashOfConfig":"15"},{"size":1227,"mtime":1658347041593,"results":"24","hashOfConfig":"15"},{"size":727,"mtime":1658772354886,"results":"25","hashOfConfig":"15"},{"size":1198,"mtime":1659113352845,"results":"26","hashOfConfig":"15"},{"size":1053,"mtime":1660061148169,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"i4jmnc",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eryncraig/Desktop/CareerFoundry/meet/src/index.js",[],["57","58"],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/reportWebVitals.js",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/serviceWorkerRegistration.js",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/App.js",["59","60"],"import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberofEvents from './NumberOfEvents';\nimport WelcomeScreen from './WelcomeScreen';\nimport EventGenre from './EventGenre';\nimport './nprogress.css';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { OfflineAlert } from './Alert';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    selectedLocation: 'all',\n    numberOfEvents: 20,\n    showWelcomeScreen: undefined\n  }\n\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({\n            events: events.slice(0, this.state.numberOfEvents),\n            locations: extractLocations(events)\n          });\n        }\n      });\n    }\n    if (navigator.onLine) {\n      this.setState({\n        offlineText: ''\n      });\n    } else {\n      this.setState({\n        offlineText: 'You are offline. Only cached results loaded.'\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(',').shift()\n      return { city, number };\n    })\n    return data;\n  };\n\n\n  updateEvents = (\n    location,\n    eventCount\n  ) => {\n    if (eventCount === undefined) {\n      eventCount = this.state.numberOfEvents;\n    } else (\n      this.setState({ numberOfEvents: eventCount })\n    )\n    if (location === undefined) {\n      location = this.state.selectedLocation\n    }\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all')\n        ? events\n        : events.filter((event) => event.location === location);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents.slice(0, eventCount),\n          numberOfEvents: eventCount,\n          selectedLocation: location\n        });\n      }\n    });\n  }\n\n\n\n\n\n  render() {\n    const { events } = this.state;\n    if (this.state.showWelcomeScreen === undefined) return <div className='App' />\n\n    return (\n\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberofEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n        <OfflineAlert text={this.state.offlineText} />\n        <div className='data-vis-wrapper'>\n          <EventGenre events={events} />\n          <ResponsiveContainer height={400}>\n            <ScatterChart\n              margin={{ top: 10, right: 10, bottom: 10, left: 10 }}>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Scatter data={this.getData()} fill=\"#fff\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n        <EventList events={this.state.events} updateEvents={this.updateEvents} numberOfEvents={this.state.numberOfEvents} />\n        {/* <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={() => { getAccessToken() }} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/eryncraig/Desktop/CareerFoundry/meet/src/api.js",["61","62"],"import { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\n\nexport const getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch('https://34fflj9wpl.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode)\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  if (!navigator.onLine) {\n    const data = localStorage.getItem('lastEvents');\n    NProgress.done();\n    return data ? JSON.parse(data).events : [];;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://34fflj9wpl.execute-api.us-west-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        'https://34fflj9wpl.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n","/Users/eryncraig/Desktop/CareerFoundry/meet/src/EventList.js",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/NumberOfEvents.js",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/CitySearch.js",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/mock-data.js",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/Event.js",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/Alert.js",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/WelcomeScreen.jsx",[],"/Users/eryncraig/Desktop/CareerFoundry/meet/src/EventGenre.js",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":21},{"ruleId":"69","severity":1,"message":"73","line":9,"column":51,"nodeType":"71","messageId":"72","endLine":9,"endColumn":65},{"ruleId":"74","severity":1,"message":"75","line":23,"column":111,"nodeType":"76","messageId":"77","endLine":23,"endColumn":112},{"ruleId":"74","severity":1,"message":"75","line":67,"column":93,"nodeType":"76","messageId":"77","endLine":67,"endColumn":94},{"ruleId":"69","severity":1,"message":"78","line":2,"column":25,"nodeType":"71","messageId":"72","endLine":2,"endColumn":29},{"ruleId":"79","severity":1,"message":"80","line":11,"column":5,"nodeType":"81","endLine":11,"endColumn":13,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'WelcomeScreen' is defined but never used.","Identifier","unusedVar","'getAccessToken' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Cell' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [events, getData]",{"range":"88","text":"89"},[260,268],"[events, getData]"]