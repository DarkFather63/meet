{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","start","dateTime","location","description","href","htmlLink","onClick","Component","EventList","events","map","id","InfoAlert","color","getStyle","style","text","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberofEvents","selectedValue","parseInt","numberOfEvents","Error","min","max","mockData","extractLocations","Set","checkToken","accessToken","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","selectedLocation","eventCount","locationEvents","mounted","slice","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","atatus","install"],"mappings":"yQAGMA,E,4MACJC,MAAQ,CACNC,WAAW,G,EAGbC,YAAc,SAACF,GACb,EAAKG,SAAS,CACZF,WAAYD,EAAMC,a,4CActB,WAAU,IAAD,OACCG,EAAUC,KAAKC,MAAfF,MACR,OAAO,sBAAKG,UAAU,QAAf,UACL,oBAAIA,UAAU,QAAd,SAAuBH,EAAMI,UAE5BH,KAAKL,MAAMC,WACV,sBAAKM,UAAU,gBAAf,UACE,oBAAGA,UAAU,aAAb,qBAAmCH,EAAMK,MAAMC,YAC/C,oBAAGH,UAAU,WAAb,oBAAgCH,EAAMO,YACtC,mBAAGJ,UAAU,UAAb,SAAwBH,EAAMQ,cAC9B,mBAAGL,UAAU,aAAaM,KAAMT,EAAMU,SAAtC,gCAIJ,wBAAQP,UAAU,MAAMQ,QAAS,kBAAM,EAAKb,YAAY,EAAKF,QAA7D,SAAsEK,KAAKL,MAAMC,UAAY,eAAiB,wB,GAnChGe,aAyCLjB,ICzCTkB,E,4JAGJ,WACE,IAAQC,EAAWb,KAAKC,MAAhBY,OAER,OACE,oBAAIX,UAAU,aAAd,SACGW,EAAOC,KAAI,SAAAf,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMgB,a,GATDJ,aAmBTC,ICCTI,E,kDACJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,OAFI,E,yEArBnB,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAIRiB,SAAW,WACT,MAAO,CACLD,MAAO,EAAKA,QALd,EAAKA,MAAQ,KAFI,E,0CAWnB,WACE,OACE,qBAAKf,UAAU,QAAf,SACE,mBAAGiB,MAAOnB,KAAKkB,WAAf,SAA4BlB,KAAKC,MAAMmB,a,GAf3BT,cCCdU,E,4MAEJ1B,MAAQ,CACN2B,MAAO,GACPC,YAAa,GACbC,qBAAiBC,G,EAGnBC,mBAAqB,SAAC3B,GACpB,IAAM4B,EAAQ5B,EAAM6B,OAAOD,MACrBJ,EAAc,EAAKtB,MAAM4B,UAAUC,QAAO,SAACxB,GAC/C,OAAOA,EAASyB,cAAcC,QAAQL,EAAMI,gBAAkB,KAEhE,GAA2B,IAAvBR,EAAYU,OAMd,OAAO,EAAKnC,SAAS,CACnBwB,MAAOK,EACPJ,cACAW,SAAU,KARZ,EAAKpC,SAAS,CACZwB,MAAOK,EACPO,SAAU,2E,EAWhBC,kBAAoB,SAACC,GACnB,EAAKtC,SAAS,CACZwB,MAAOc,EACPb,YAAa,GACbC,iBAAiB,EACjBU,SAAU,KAEZ,EAAKjC,MAAMoC,aAAaD,I,4CAG1B,WAAU,IAAD,OACP,OACE,sBAAKlC,UAAU,aAAf,UACE,cAAC,EAAD,CAAWkB,KAAMpB,KAAKL,MAAMuC,WAC5B,0DACA,uBAAOI,KAAK,OACVpC,UAAU,OACVyB,MAAO3B,KAAKL,MAAM2B,MAClBiB,SAAUvC,KAAK0B,mBACfc,QAAS,WAAQ,EAAK1C,SAAS,CAAE0B,iBAAiB,OAEpD,qBAAItB,UAAU,cAAciB,MAAOnB,KAAKL,MAAM6B,gBAAkB,GAAK,CAAEiB,QAAS,QAAhF,UACGzC,KAAKL,MAAM4B,YAAYT,KAAI,SAACsB,GAAD,OAC1B,oBAAqB1B,QAAS,kBAAM,EAAKyB,kBAAkBC,IAA3D,SAAyEA,GAAhEA,MAEX,oBAAc1B,QAAS,kBAAM,EAAKyB,kBAAkB,QAApD,SACE,gDADM,iB,GApDOxB,aA6DVU,IC9DTqB,E,4MAGJhB,mBAAqB,SAAC3B,GACpB,IAAM4C,EAAgBC,SAAS7C,EAAM6B,OAAOD,OACxCgB,GAAiB,IAAMA,EAAgB,EACzC,EAAK7C,SAAS,CACZ+C,eAAgBF,IAGlB,EAAK7C,SAAS,CACZ+C,eAAgB,GAChBC,MAAO,2CAGX,EAAK7C,MAAMoC,kBAAaZ,EAAWkB,I,4CAGrC,WACE,IAAQE,EAAmB7C,KAAKC,MAAxB4C,eACR,OAAO,sBAAK3C,UAAU,cAAf,UACL,kDACA,uBAAOA,UAAU,eAAeoC,KAAK,SAASS,IAAI,IAAIC,IAAI,MAAMrB,MAAOkB,EAAgBN,SAAUvC,KAAK0B,4B,GAtB/Ef,aA+Bd+B,I,gBCjCTO,EAAW,CACf,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,mBACX,YAAe,uWACf,SAAY,aACZ,QAAW,CACT,MAAS,oCACT,MAAQ,GAEV,UAAa,CACX,MAAS,oCACT,MAAQ,GAEV,MAAS,CACP,SAAY,4BACZ,SAAY,iBAEd,IAAO,CACL,SAAY,4BACZ,SAAY,iBAEd,iBAAoB,6BACpB,kBAAqB,CACnB,SAAY,4BACZ,SAAY,iBAEd,QAAW,wCACX,SAAY,EACZ,UAAa,CACX,YAAc,GAEhB,UAAa,WAEf,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,eACX,YAAe,mSACf,SAAY,kBACZ,QAAW,CACT,MAAS,oCACT,MAAQ,GAEV,UAAa,CACX,MAAS,oCACT,MAAQ,GAEV,MAAS,CACP,SAAY,4BACZ,SAAY,iBAEd,IAAO,CACL,SAAY,4BACZ,SAAY,iBAEd,iBAAoB,6BACpB,kBAAqB,CACnB,SAAY,4BACZ,SAAY,iBAEd,QAAW,wCACX,SAAY,EACZ,UAAa,CACX,YAAc,GAEhB,UAAa,Y,kCCzEJC,EAAmB,SAACrC,GAC/B,IAAIqC,EAAmBrC,EAAOC,KAAI,SAACf,GAAD,OAAWA,EAAMO,YAEnD,OADa,YAAO,IAAI6C,IAAID,KAKxBE,EAAU,iDAAG,WAAOC,GAAP,iGACIC,MAAM,+DAAD,OAAgED,IACvFE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UAHT,cACXG,EADW,yBAKVA,GALU,2CAAH,sDASVC,EAAQ,iDAAG,WAAOC,GAAP,4FACTC,EAAaC,mBAAmBF,GADvB,SAEgBR,MAAM,wEAA+ES,GACjHR,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACC,GAAD,OAAWA,KANL,wBAEPM,EAFO,EAEPA,eAMQC,aAAaC,QAAQ,eAAgBF,GARtC,kBAURA,GAVQ,2CAAH,sDAcRG,EAAc,WAClB,GAAIC,OAAOC,QAAQC,WAAaF,OAAO/D,SAASkE,SAAU,CACxD,IAAIC,EACFJ,OAAO/D,SAASoE,SAChB,KACAL,OAAO/D,SAASqE,KAChBN,OAAO/D,SAASkE,SAClBH,OAAOC,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASJ,OAAO/D,SAASoE,SAAW,KAAOL,OAAO/D,SAASqE,KAC3DN,OAAOC,QAAQC,UAAU,GAAI,GAAIE,IAIxBG,EAAS,iDAAG,uGACvBC,IAAUzE,SAENiE,OAAO/D,SAASE,KAAKsE,WAAW,oBAHb,uBAIrBD,IAAUE,OAJW,kBAKd9B,GALc,uBAQH+B,IARG,YAQjBC,EARiB,gCAWrBb,IACMc,EAAM,6EAAoFD,EAZ3E,UAaAE,IAAMC,IAAIF,GAbV,eAaftB,EAbe,QAcVyB,OACLxD,EAAYqB,EAAiBU,EAAOyB,KAAKxE,QAC7CqD,aAAaC,QAAQ,aAAcmB,KAAKC,UAAU3B,EAAOyB,OACzDnB,aAAaC,QAAQ,YAAamB,KAAKC,UAAU1D,KAEnDgD,IAAUE,OAnBW,kBAoBdnB,EAAOyB,KAAKxE,QApBE,4CAAH,qDAwBTmE,EAAc,iDAAG,2GACtB3B,EAAca,aAAasB,QAAQ,gBADb,KAETnC,GAFS,qCAEaD,EAAWC,GAFxB,6BAEtBoC,EAFsB,KAIvBpC,IAAeoC,EAAW9B,MAJH,kCAKpBO,aAAawB,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgBvB,OAAO/D,SAASuF,QAN/B,UAOPF,EAAaP,IAAI,QAPV,WAOpBtB,EAPoB,yCASFqB,IAAMC,IAC1B,+EAVsB,eASlBU,EATkB,OAYhBC,EAAYD,EAAQT,KAApBU,QAZgB,kBAahB1B,OAAO/D,SAASE,KAAOuF,GAbP,iCAenBjC,GAAQD,EAASC,IAfE,iCAiBrBT,GAjBqB,4CAAH,qDChErB2C,E,4MAEJrG,MAAQ,CACNkB,OAAQ,GACRgB,UAAW,GACXoE,iBAAkB,MAClBpD,eAAgB,I,EAoBlBR,aAAe,SACb/B,EACA4F,QAEmBzE,IAAfyE,EACFA,EAAa,EAAKvG,MAAMkD,eAExB,EAAK/C,SAAS,CAAE+C,eAAgBqD,SAEjBzE,IAAbnB,IACFA,EAAW,EAAKX,MAAMsG,kBAExBrB,IAAYrB,MAAK,SAAC1C,GAChB,IAAMsF,EAA+B,QAAb7F,EACpBO,EACAA,EAAOiB,QAAO,SAAC/B,GAAD,OAAWA,EAAMO,WAAaA,KAC5C,EAAK8F,SACP,EAAKtG,SAAS,CACZe,OAAQsF,EAAeE,MAAM,EAAGH,GAChCrD,eAAgBqD,EAChBD,iBAAkB3F,Q,wGApC1B,mGACEN,KAAKoG,SAAU,EACfxB,IAAYrB,MAAK,SAAC1C,GACZ,EAAKuF,SACP,EAAKtG,SAAS,CACZe,OAAQA,EAAOwF,MAAM,EAAG,EAAK1G,MAAMkD,gBACnChB,UAAWqB,EAAiBrC,QANpC,gD,wFAYA,WACEb,KAAKoG,SAAU,I,oBAiCjB,WACE,OAEE,sBAAKlG,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CAAY2B,UAAW7B,KAAKL,MAAMkC,UAAWQ,aAAcrC,KAAKqC,eAChE,cAAC,EAAD,CAAgBQ,eAAgB7C,KAAKL,MAAMkD,eAAgBR,aAAcrC,KAAKqC,eAC9E,cAAC,EAAD,CAAWxB,OAAQb,KAAKL,MAAMkB,OAAQwB,aAAcrC,KAAKqC,aAAcQ,eAAgB7C,KAAKL,MAAMkD,wB,GA/DxFlC,aAqEHqF,ICjEKM,QACW,cAA7BjC,OAAO/D,SAASiG,UAEe,UAA7BlC,OAAO/D,SAASiG,UAEhBlC,OAAO/D,SAASiG,SAASC,MAAM,2D,YCLpBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAACkE,GACLA,EAAaC,gBAEdhE,OAAM,SAACC,GACNgE,QAAQhE,MAAMA,EAAMiE,YE9G5BnB,IAEAoB,SAAc,oCAAoCC,Y","file":"static/js/main.99dc7941.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css'\n\nclass Event extends Component {\n  state = {\n    collapsed: false,\n  };\n\n  handleClick = (state) => {\n    this.setState({\n      collapsed: !state.collapsed\n    });\n    // const coll = document.getElementsByClassName('display');\n    // Array.from(coll).forEach((x) => {\n    //   if (x.style.display === 'none') {\n    //     x.style.display = 'block';\n    //   } else {\n    //     x.style.display = 'none';\n    //   }\n    // })\n\n  }\n\n  //Add css to element to hide/display event details\n  render() {\n    const { event } = this.props;\n    return <div className=\"event\">\n      <h4 className=\"title\">{event.summary}</h4>\n\n      {this.state.collapsed && (\n        <div className=\"event_details\">\n          <p className=\"start-time\">Starts: {event.start.dateTime}</p>\n          <p className=\"location\">Where: {event.location}</p>\n          <p className=\"details\">{event.description}</p>\n          <a className=\"event-link\" href={event.htmlLink}>Add to calendar</a>\n        </div>\n      )}\n\n      <button className=\"btn\" onClick={() => this.handleClick(this.state)}>{this.state.collapsed ? 'Hide details' : 'Show Details'}</button>\n\n    </div>;\n  }\n};\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n\n  render() {\n    const { events } = this.props;\n\n    return (\n      <ul className='event-list'>\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from \"react\";\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className='Alert'>\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nexport { InfoAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We cannot find the city you are looking for. Please try another city.'\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: ''\n      });\n    }\n  }\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n      infoText: ''\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className='CitySearch'>\n        <InfoAlert text={this.state.infoText} />\n        <h3>Select Your Nearest City</h3>\n        <input type='text'\n          className='city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className='suggestions' style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\n          ))}\n          <li key='all' onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\n\nclass NumberofEvents extends Component {\n\n\n  handleInputChanged = (event) => {\n    const selectedValue = parseInt(event.target.value);\n    if (selectedValue <= 20 && selectedValue > 0) {\n      this.setState({\n        numberOfEvents: selectedValue\n      });\n    } else {\n      this.setState({\n        numberOfEvents: 20,\n        Error: 'Please select a number greater than 0.'\n      })\n    }\n    this.props.updateEvents(undefined, selectedValue);\n  };\n\n  render() {\n    const { numberOfEvents } = this.props;\n    return <div className=\"event-count\">\n      <p>Number of Events:</p>\n      <input className=\"event-number\" type=\"number\" min=\"1\" max=\"100\" value={numberOfEvents} onChange={this.handleInputChanged}>\n\n      </input>\n\n\n    </div>\n  }\n}\n\nexport default NumberofEvents;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  }\n];\n\n\nexport { mockData };","import { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch('https://34fflj9wpl.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode)\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://34fflj9wpl.execute-api.us-west-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        'https://34fflj9wpl.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberofEvents from './NumberOfEvents';\nimport './nprogress.css';\nimport { extractLocations, getEvents } from './api';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    selectedLocation: 'all',\n    numberOfEvents: 20\n  }\n\n\n  async componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (\n    location,\n    eventCount\n  ) => {\n    if (eventCount === undefined) {\n      eventCount = this.state.numberOfEvents;\n    } else (\n      this.setState({ numberOfEvents: eventCount })\n    )\n    if (location === undefined) {\n      location = this.state.selectedLocation\n    }\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all')\n        ? events\n        : events.filter((event) => event.location === location);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents.slice(0, eventCount),\n          numberOfEvents: eventCount,\n          selectedLocation: location\n        });\n      }\n    });\n  }\n\n\n\n\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberofEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} updateEvents={this.updateEvents} numberOfEvents={this.state.numberOfEvents} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as atatus from 'atatus-spa';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\natatus.config('18141f2cbec944839d68c7209095dc3e').install();\n\n"],"sourceRoot":""}